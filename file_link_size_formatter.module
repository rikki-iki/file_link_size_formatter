<?php
/**
 * @file
 * Implemented hooks for the file_formatters module.
 */


/**
 * Implements hook_field_formatter_info().
 */
function file_link_size_formatter_field_formatter_info() {
  return array(
    'file_link_size' => array(
      'label' => t('Link to file (with file size)'),
      'field types' => array('file'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function file_link_size_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
    
  if ($display['type'] == 'file_link_size') {
    foreach ($items as $delta => $file) {
      $url = file_create_url($file['uri']);

      // Set options as per anchor format described at
      // http://microformats.org/wiki/file-format-examples
      $options = array(
        'attributes' => array(
          'type' => $file['filemime'] . '; length=' . $file['filesize'],
        ),
      );

      // Use the description as the link text if available.
      if (empty($file['description'])) {
        $link_text = $file['filename'];
      }
      else {
        $link_text = $file['description'];
        $options['attributes']['title'] = check_plain($file['filename']);
      }

      $element[$delta] = array(
        '#markup' => l($link_text, $url, $options) . ' <span class="filesize">(' . format_size($file['filesize']) . ')</span>',
      );
    }
  }

  return $element;
}
